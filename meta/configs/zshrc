plugins=(
    command-not-found
    common-aliases
    debian
    docker
    emacs
    fzf
    git
    git-extras
    github
    gnu-utils
    history-substring-search
    nvm
    podman
    python
    sudo
    zsh-autosuggestions
    zsh-completions
    zsh-history-substring-search
    zsh-syntax-highlighting
)
ZSH_THEME="fishy"
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=4,bg=0,bold,underline"
zstyle ':omz:plugins:nvm' lazy yes

source $ZSH/oh-my-zsh.sh

# NVM
# function nvm { # lazy
#     if [ -s "$NVM_DIR/nvm.sh" ]; then
#         . "$NVM_DIR/nvm.sh"
#         nvm use system
#         nvm $@
#     fi
# }

# Lazyload Pyenv
if type pyenv > /dev/null; then
    pyenv() {
        unfunction $0
        eval "$(pyenv init --path)"
        eval "$(command pyenv init -)"
        eval "$(command pyenv virtualenv-init -)"
        [ -s $HOME/.pyenv/versions/default ] || pyenv virtualenv default
        pyenv activate default
        pyenv virtualenvwrapper
        $0 "$@"
    }
fi

workon() {
    unfunction "$0"
    pyenv > /dev/null 2>&1
    $0 "$@"
}

function doc {
    local what=$1
    curl "https://cheat.sh/$what" | less
}

# Alias
alias emacs='emacs -nw'
alias remove_duplicate_lines='awk '"'"'!visited[$0]++'"'"''

if ! type docker &> /dev/null; then
    alias docker=podman
    alias docker-compose=podman-compose
fi

# Navigation
alias ..='cd ..'
alias ...='cd ../..'
alias .3='cd ../../..'
alias .4='cd ../../../..'
alias .5='cd ../../../../..'
alias ~='cd ~'
alias thumb_all='feh --montage --thumb-height 150 --thumb-width 150 --index-info "%wx%h" --output .'

# HSTR
if [ -x "$(command -v hstr)" ]; then
    alias hh=hstr
    setopt histignorespace           # skip cmds w/ leading space from history
    export HSTR_CONFIG=hicolor       # get more colors
    bindkey -s "\C-r" "\C-a hstr -- \C-j"     # bind hstr to Ctrl-r (for Vi mode check doc)
    export HSTR_TIOCSTI=y
else
    echo "Please install hstr to keep your sanity"
fi

# Rust
[ -s $HOME/.cargo ] && source "$HOME/.cargo/env"

# When in Darwin
if [[ $(uname -s) == "Darwin" ]]; then
    unalias docker
    unalias docker-compose

    # made cmd+f/b behave as expected
    if [[ "$TERM" == "xterm-kitty" ]]; then
        bindkey '2;9u' forward-word
        bindkey '8;9u' backward-word
    fi
fi

# start x as default
if [[ $(uname -s) == "Linux" ]] && [[ -z "$DISPLAY" ]] && [[ $(tty) = /dev/tty1 ]]; then
    DP_PATH="$(python ~/.display_manager.py)"
    echo "Executing: $DP_PATH"
    eval "$DP_PATH"
    read -n 1
    exit
fi


if [ -x "$(command -v eza)" ]; then
    alias ls='eza'
else
    echo "Please install eza to keep your sanity"
fi

# ssh
if [[ $TERM == "xterm-kitty" ]]; then
    alias ssh="kitty +kitten ssh"
fi

# HSTR configuration - add this to ~/.zshrc
alias hh=hstr                    # hh to be alias for hstr
setopt histignorespace           # skip cmds w/ leading space from history
export HSTR_CONFIG=hicolor       # get more colors
hstr_no_tiocsti() {
    zle -I
    { HSTR_OUT="$( { </dev/tty hstr ${BUFFER}; } 2>&1 1>&3 3>&- )"; } 3>&1;
    BUFFER="${HSTR_OUT}"
    CURSOR=${#BUFFER}
    zle redisplay
}
zle -N hstr_no_tiocsti
bindkey '\C-r' hstr_no_tiocsti
export HSTR_TIOCSTI=n

